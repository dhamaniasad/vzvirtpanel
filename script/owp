#!/bin/sh
###
# OpenVZ Web Panel startup script
###

###
# chkconfig: 345 97 87
# description: OpenVZ Web Panel startup script
###

### BEGIN INIT INFO
# Provides: owp
# Required-Start: vz
# Required-Stop:
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: OpenVZ Web Panel startup script
# Description: OpenVZ Web Panel startup script
### END INIT INFO

# configuration defaults
if [ -f `dirname $0`/../script/owp ]; then
  INSTALL_DIR=`dirname $0`/../
else
  INSTALL_DIR="/opt/ovz-web-panel/"
fi

WEB_SERVER=webrick
PORT=3000
IP=0.0.0.0
SSL=off
LOCK_FILE=/var/lock/owp

[ -f /etc/owp.conf ] && . /etc/owp.conf

check_environment() {
  if [ -f /proc/vz/version ]; then
    ENVIRONMENT="HW-NODE"
  else
    ENVIRONMENT="STANDALONE"
  fi
}

echo_ok() {
  MESSAGE=$1
  /bin/echo -en "\033[00;32m[OK]\033[00m "
  echo $MESSAGE
}

echo_fail() {
  MESSAGE=$1
  /bin/echo -en "\033[00;31m[FAIL]\033[00m "
  echo $MESSAGE
}

start() {
  if [ -f $LOCK_FILE ]; then
    echo_fail "OpenVZ Web Panel is already running."
    exit 1
  fi

  STATUS=0
  echo  "Starting OpenVZ Web Panel..."

  echo "Starting watchdog daemon..."
  ruby $INSTALL_DIR/utils/watchdog/watchdog.rb start > /dev/null 2>&1

  if [ 0 -ne $? ]; then
    echo_fail "Unable to start watchdog daemon."
    STATUS=1
  else
    echo_ok "Watchdog daemon was started."
  fi

  echo "Starting web server $WEB_SERVER on $IP:$PORT..."

  if [ "x$SSL" = "xon" ]; then
    ruby $INSTALL_DIR/script/server_ssl $WEB_SERVER -e production -p $PORT -b $IP -d > /dev/null 2>&1
  else
    ruby $INSTALL_DIR/script/server $WEB_SERVER -e production -p $PORT -b $IP -d > /dev/null 2>&1
  fi

  if [ 0 -ne $? ]; then
    STATUS=2
    echo_fail "Unable to start web server."
  else
    echo_ok "Web server was started."
  fi

  if [ "$ENVIRONMENT" = "HW-NODE" ]; then
    echo "Starting hardware node daemon..."
    ruby $INSTALL_DIR/utils/hw-daemon/hw-daemon.rb start > /dev/null 2>&1

    if [ 0 -ne $? ]; then
      STATUS=3
      echo_fail "Unable to start hardware node daemon."
    else
      echo_ok "Hardware node daemon was started."
    fi
  fi

  touch $LOCK_FILE
  sleep 1 # wait a little for forked processes
  echo "Syncing hardware nodes states..."
  ruby $INSTALL_DIR/script/runner -e production "HardwareServer.all.each { |server| server.sync }" > /dev/null 2>&1

  if [ 0 -ne $? ]; then
    STATUS=4
    echo_fail "Unable to sync information about hardware nodes."
  else
    echo_ok "Hardware nodes information was synced."
  fi

  exit $STATUS
}

stop() {
  STATUS=0
  echo "Stopping OpenVZ Web Panel server..."

  PANEL_APP_PID=`ps auxww | grep ruby | grep script/server | awk '{ print $2 }'`
  if [ -n "$PANEL_APP_PID" ]; then
    echo "Stopping web server..."
    kill -2 $PANEL_APP_PID > /dev/null 2>&1
    if [ 0 -ne $? ]; then
      STATUS=1
      echo_fail "Unable to stop web server."
    else
      echo_ok "Web server was stopped."
      ruby $INSTALL_DIR/script/runner -e production  "BackgroundJob.stop_running" > /dev/null 2>&1
    fi
  fi

  if [ "$ENVIRONMENT" = "HW-NODE" ]; then
    echo "Stopping hardware node daemon..."
    ruby $INSTALL_DIR/utils/hw-daemon/hw-daemon.rb stop > /dev/null 2>&1

    if [ 0 -ne $? ]; then
      STATUS=2
      echo_fail "Unable to stop hardware node daemon."
    else
      echo_ok "Hardware node daemon was stopped."
    fi
  fi

  echo "Stopping watchdog daemon..."
  ruby $INSTALL_DIR/utils/watchdog/watchdog.rb stop > /dev/null 2>&1

  if [ 0 -ne $? ]; then
    STATUS=2
    echo_fail "Unable to stop watchdog daemon."
  else
    echo_ok "Watchdog daemon was stopped."
  fi

  rm -f $LOCK_FILE

  return $STATUS
}

status() {
  if [ ! -f $LOCK_FILE ]; then
    echo_fail "OpenVZ Web Panel is stopped."
    exit 1
  fi

  STATUS=0

  if [ ! -f $INSTALL_DIR/utils/watchdog/watchdog.pid ]; then
    echo_fail "Watchdog daemon is stopped."
    STATUS=2
  else
    WATCHDOG_PID=`cat $INSTALL_DIR/utils/watchdog/watchdog.pid`
    kill -0 $WATCHDOG_PID > /dev/null 2>&1
    if [ 0 -ne $? ]; then
      echo_fail "Watchdog daemon probably died."
      STATUS=3
    else
      echo_ok "Watchdog daemon is running."
    fi
  fi

  if [ "$ENVIRONMENT" = "HW-NODE" ]; then
    if [ ! -f $INSTALL_DIR/utils/hw-daemon/hw-daemon.pid ]; then
      echo_fail "Hardware node daemon is stopped."
      STATUS=4
    else
      HW_DAEMON_PID=`cat $INSTALL_DIR/utils/hw-daemon/hw-daemon.pid`
      kill -0 $HW_DAEMON_PID > /dev/null 2>&1
      if [ 0 -ne $? ]; then
        echo_fail "Hardware node daemon probably died."
        STATUS=5
      else
        echo_ok "Hardware node daemon is running."
      fi
    fi
  fi

  echo_ok "OpenVZ Web Panel is running."
  exit $STATUS
}

# main()
check_environment
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    exit $?
    ;;
  status)
    status
    ;;
  restart|reload|condrestart)
    stop
    start
    ;;
  *)
    echo $"Usage: $0 {start|stop|restart|reload|status}"
    exit 1
esac

exit 0
